import("rtt_ros");
import("rtt_roscomm");
import("rtt_rosparam");

ros.import("eigen_typekit");
ros.import("self_collision");
ros.import("velma_joint_sim");
ros.import("rtt_sensor_msgs");
ros.import("rtt_visualization_msgs");
ros.import("rtt_shape_msgs");
ros.import("rtt_qhull_msgs");
ros.import("controller_common");
ros.import("velma_controller");
ros.import("rtt_cartesian_trajectory_msgs");

setActivity("self_collision_test", 0, 1, ORO_SCHED_RT)

loadComponent("VJS", "VelmaJointSim");
setActivity("VJS", 0.01, 6, ORO_SCHED_RT);
stream("VJS.ros_joint_states", ros.comm.topic("/joint_states"));

VJS.configure();

//loadComponent("Ps", "VectorSplit2");
//Ps.loadService("rosparam");
//Ps.rosparam.getAll();
//connect("VJS.VT_JointPosition", "Ps.In", ConnPolicy());

loadComponent("Jc", "VectorConcate3");
setActivity("Jc", 0.01, 6, ORO_SCHED_RT);

connect("VJS.VT_JointPosition", "Jc.In0", ConnPolicy());
connect("VJS.FRIr_JointPosition", "Jc.In1", ConnPolicy());
connect("VJS.FRIl_JointPosition", "Jc.In2", ConnPolicy());

loadComponent("Mass", "RobotMassMatrix");
//loadComponent("Mass", "MassTest");
setActivity("Mass", 0.01, 6, ORO_SCHED_RT);
Mass.loadService("robot");
Mass.configure();

connect("Jc.Out", "Mass.JointPosition", ConnPolicy());

loadComponent("SCA", "SelfCollisionAvoidance");
setActivity("SCA", 0.01, 6, ORO_SCHED_RT);
SCA.loadService("rosparam");
SCA.rosparam.getAll();
SCA.rosparam.getAbsolute("robot_description");
SCA.rosparam.getAbsolute("robot_semantic_description");

connect("Jc.Out", "SCA.JointPosition", ConnPolicy());

stream("SCA.GripperJointPosition", ros.comm.topic("/joint_states"));
//stream("SCA.dbg_joint_states", ros.comm.topic("/joint_states"));
stream("SCA.dbg_markers", ros.comm.topic("/velma_markers"));

stream("SCA.QhullDataIn", ros.comm.topic("/qhull"));
stream("SCA.QhullPointsOut", ros.comm.topic("/qhull_points"));

//Ps.configure();
Jc.configure();
SCA.configure();

VJS.start();
//Ps.start();
Jc.start();
Mass.start();
SCA.start();


