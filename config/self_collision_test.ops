import("rtt_ros");
import("rtt_roscomm");
import("rtt_rosparam");

ros.import("eigen_typekit");
//ros.import("rtt_control_msgs");
ros.import("self_collision");
//ros.import("rtt_cartesian_trajectory_msgs");
ros.import("rtt_sensor_msgs");
ros.import("rtt_visualization_msgs");
ros.import("rtt_shape_msgs");
ros.import("rtt_qhull_msgs");
//ros.import("rtt_tf");

setActivity("self_collision_test", 0, 1, ORO_SCHED_RT)

//------------------------------------------------------------------------------
//-- Hardware interface
//------------------------------------------------------------------------------

loadComponent("SCA", "SelfCollisionAvoidance");
setActivity("SCA", 0.01, 6, ORO_SCHED_RT);
SCA.loadService("rosparam");
SCA.rosparam.getAll();
SCA.rosparam.getAbsolute("robot_description");
SCA.rosparam.getAbsolute("robot_semantic_description");

stream("SCA.dbg_joint_states", ros.comm.topic("/joint_states"));
stream("SCA.dbg_markers", ros.comm.topic("/velma_markers"));

stream("SCA.QhullDataIn", ros.comm.topic("/qhull"));
stream("SCA.QhullPointsOut", ros.comm.topic("/qhull_points"));

SCA.configure();

//loadComponent("Qhull0", "QhullCalculator");
//setActivity("Qhull0", 0.01, 6, ORO_SCHED_RT);

//loadComponent("Qhull1", "QhullCalculator");
//setActivity("Qhull1", 0.01, 6, ORO_SCHED_RT);

//loadComponent("Qhull2", "QhullCalculator");
//setActivity("Qhull2", 0.01, 6, ORO_SCHED_RT);

//Qhull0.configure();
//Qhull1.configure();
//Qhull2.configure();

//connect("SCA.QhullDataIn0", "Qhull0.QhullDataOut", ConnPolicy());
//connect("SCA.QhullDataIn1", "Qhull1.QhullDataOut", ConnPolicy());
//connect("SCA.QhullDataIn2", "Qhull2.QhullDataOut", ConnPolicy());

//connect("SCA.QhullPointsOut0", "Qhull0.QhullPointsIn", ConnPolicy());
//connect("SCA.QhullPointsOut1", "Qhull1.QhullPointsIn", ConnPolicy());
//connect("SCA.QhullPointsOut2", "Qhull2.QhullPointsIn", ConnPolicy());

//Qhull0.start();
//Qhull1.start();
//Qhull2.start();

SCA.start();


